% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cnj_quantidade.R
\name{cnj_quantidade}
\alias{cnj_quantidade}
\title{Encontra a quantidade de processos distribuídos numa unidade judiciária.}
\usage{
cnj_quantidade(fim, inicio = 0, ano, segmento, uf, distribuidor, funcao,
  expr = "sp_vazio")
}
\arguments{
\item{fim}{Qualquer inteiro que seguramente é superior ao número de processos distribuídos}

\item{inicio}{Se você sabe que não pode haver menos que tanto, coloca esse número
para reduzir o número de buscas.}

\item{ano}{Indicar o ano em questão}

\item{segmento}{Segmento do Judiciário}

\item{uf}{Unidade federativa.}

\item{distribuidor}{Código do distribuídor. Encontrar no data-raw.}

\item{funcao}{Função a ser aplicada para baixar: esaj::download_cpopg, tjdft::baixar_processo, etc.}

\item{expr}{Expressão a ser avaliada. No caso de São Paulo, eu criei uma função
     interna chamada `sp_vazio`, que verifica se o tamanho do arquivo é menor que 90Mb.

 @details Essa função adata um procedimento heurístico para encontrar a quantidade de 
     processos distribuídos numa unidade judiciária em um determinado ano. 
     À moda de busca binária, ela vai iniciar requisições a partir da média entre 
     o ínicio e o fim indicados por você. Ela vai vai fazer cinco requisições por vez,
     pois  pode haver uma sequência de processos não existentes. Como cada função para baixar 
     processos retorna um objeto distinto, você deve indicar uma expressão que retornará 
     verdadeiro para casos de processos não existentes. Para São Palo, basta usar a função 
     interna sp_vazio. Futuramente, incluirei outras expressões para outros TJs, 
     de modo que este parâmetro será obsoleto.}
}
\value{
Quantidade máxima aproximada de processos distribuídos.
}
\description{
Encontra a quantidade de processos distribuídos numa unidade judiciária.
}
